package zpp_nape;
$(import);

class PR(Config) {
    public static inline var ANGDRAGCOEF_FRICTION = 2.5;
    public static inline var ANGDRAGCOEF_DRAG = 100;
    public static inline var ANGDRAGCOEF_VACUUM = 0.5;

    public static inline var FLUID_COEF_LIN = 0.5; //linear fluid drag
    public static inline var FLUID_COEF_ANG = 1e-6; //angular fluid drag

    //amount of overlap in pixels allowed between shapes
    //   decreasing this too much causes instability.
    public static inline var OVERLAP = 0.2;
    public static inline var SWEEP_OVERLAP = 0.5;

    // limit on distance for sweep to terminate.
    public static inline var SWEEP_LIMIT = 0.05;

    // Ratio of maximum radius body must move through to be sweeped
    // against static objects (linear velocity).
    public static inline var MIN_LIN_STATIC_SWEEP = 0.05;
    public static inline var MIN_LIN_BULLET_SWEEP = 0.125;
    // Threshold for maximum angular velocity per timestep to be sweeped
    // against static objects.
    public static inline var MIN_ANG_STATIC_SWEEP = 0.005;
    public static inline var MIN_ANG_BULLET_SWEEP = 0.0125;

    public static inline var EQUAL_SQ_VEL = 300; // (px/s)^2
    public static inline var ZERO_ANG_BIAS = 0.6; // (px.rad/s)
    public static inline var TOI_SLIP_SCALE = 0.75;

    //constraint position slop allowed.
    public static inline var SLOP = 0.01;
    public static inline var ANGSLOP = 1e-6;

    //amount of steps for which contacts/arbiters are allowed to persist in memory
    //   this helps with stability in jittery cases by allowing cached values to not be reset so often
    public static inline var PERSIST = 6;

    public static inline var BIAS_COEF = 0.3;
    public static inline var STAT_BIAS_COEF = 0.6;
    public static inline var CONT_BIAS_COEF = 0.4;
    public static inline var STAT_CONT_BIAS_COEF = 0.5;

    public static inline var ILL:Float = 4e5;

    public static inline var STATIC_VELSQ = 4;
    public static inline var BOUNCE_THRESHOLD = 20;

    //amount of time that a body must be at rest before it is considered to be eligible for sleeping
    public static inline var SLEEP_DELAY = 60;

    //squared linear velocity at which above, a body is not considered at rest
    public static inline var SLEEP_LINEAR_SQ = 0.2;
    //squared approximate tangentenial velocity at which above, a body is not considered at rest
    //   for polygons, the bounding box is used to approximate a 'radius'
    public static inline var SLEEP_ANGULAR_SQ = 0.4;

    //linear drag applied to all bodies per second as a fraction of velocity
    public static inline var GLOBAL_LIN_DRAG = 0.015;
    //angular drag applied to all bodies per second as a fraction of angular velocity
    public static inline var GLOBAL_ANG_DRAG = 0.015;
}
