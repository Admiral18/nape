package zpp_nape.phys;
$(import);

class PR(FluidProperties) {
	
	PRFeatureMix(FluidProperties,fluidProperties)
	
	flibmdel public inline function copy() {
		var ret = Get(PR(FluidProperties));
		ret.viscosity = viscosity;
		ret.density = density;
		return ret;
	}
	
	public function new() {
		feature_cons();
		density = viscosity = 1;
		wrap_gravity = null;
		vec_set(gravity,0,0);
	}
	
	//----------------------------------------------------------------------------------------------
	
	public var viscosity:Float;
	public var density:Float;
	vec_new(public, gravity); public var wrap_gravity:Vec2;

	public function getgravity() {
		var me = this;
		wrap_gravity = Vec2.get(gravityx,gravityy);
		wrap_gravity.pr(inner).inuse = true;
		wrap_gravity.pr(inner)._invalidate = function(x:PR(Vec2)) {
			vec_set(me.gravity,x.);
			me.invalidate();
		}
		wrap_gravity.pr(inner)._validate = function() {
			vec_set(me.wrap_gravity.pr(inner).,me.gravity);
		}
	} 
	
	flibmdel public inline function invalidate() {
		Iter(shape,shapes,shape.invalidate_fluidprops());
	}
}
