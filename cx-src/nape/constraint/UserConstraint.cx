package nape.constraint;
$(import);

class UserConstraint extends Constraint {
	public var pr(inner_zn):PR(UserConstraint);

	public function new(dimensions:Int) {
		DEBUG(try { super(); } catch (e:Dynamic) {})
		RELEASE(super();)

		pr(inner_zn) = new PR(UserConstraint)(dimensions);
		pr(inner) = pr(inner_zn);
		pr(inner).outer = this;
		pr(inner_zn).outer_zn = this;
	}

	public override function impulse() {
		var ret = new MatMN(pr(inner_zn).dim,1);
		for(i in 0...pr(inner_zn).dim)
			ret.setx(i,0, pr(inner_zn).jAcc[i] + pr(inner_zn).pjAcc[i]);
		return ret;
	}

	public override function bodyImpulse(body:Body) {
		DEBUG(
			if(body==null) throw "Error: Cannot evaluate impulse on null body";
			var found = false;
			for(b in pr(inner_zn).bodies) {
				if(b.body==body.pr(inner)) { found = true; break; }
			}
			if(!found) throw "Error: Body is not linked to this constraint";
		)
		if(!active) return new Vec3();
		else        return pr(inner_zn).bodyImpulse(body.pr(inner));
	}

}
