package nape.phys;
$(import);

class FluidProperties {
	
	FeatureMix(FluidProperties,fluidProperties)
	
	public function new(?density:Float=1,?viscosity:Float=1) {
		pr(inner) = Get(PR(FluidProperties));
		pr(inner).outer = this;
		this.density = density;
		this.viscosity = viscosity;
	}
	
	keep public inline function copy() {
		return new FluidProperties(density,viscosity);
	}
	
	//----------------------------------------------------------------------------------------------
	
	public var userData:Dynamic;
	
	//----------------------------------------------------------------------------------------------
	
	$(mixin prop(n)
        property(n,Float,pr(inner).n * ($str(n)=="density" ? 1000 : 1),{
			if(n!=this.n) {
				DEBUG(
					if(isNaN(n)) throw "Error: FluidProperties::"+$str(n)+" cannot be NaN";
					if($str(n)!="density" && n<0) throw "Error: FluidProperties::"+$str(n)+" ("+n+") must be >= 0";
				)
                pr(inner).n = n / ($str(n)=="density" ? 1000 : 1);
				pr(inner).invalidate();
			}
		})
	);
	prop(density)
	prop(viscosity)
	
	//----------------------------------------------------------------------------------------------
	
	@:$keep public function toString() {
        return "{ density: "+density
			   +" viscosity: "+viscosity
               +" }";
    }
	
}
