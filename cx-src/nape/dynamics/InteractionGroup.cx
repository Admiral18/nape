package nape.dynamics;
$(import);

class InteractionGroup {
	public var pr(inner):PR(InteractionGroup);

	property(id,Int,pr(inner).id)

	property(group,InteractionGroup,{
		if(pr(inner).group==null) null else pr(inner).group.outer;
	},{
		DEBUG(if(group==this) throw "Error: Cannot assign InteractionGroup to itself";)
		pr(inner).setGroup(group==null ? null : group.pr(inner));
	})

	property(ignore,Bool,pr(inner).ignore,{
		if(this.ignore!=ignore) {
			pr(inner).invalidate(true);
			pr(inner).ignore = ignore;
		}
	})

	property(interactors, InteractorList, {
		if(pr(inner).wrap_interactors==null)
			 pr(inner).wrap_interactors = PR(InteractorList).get(pr(inner).interactors,true);
		pr(inner).wrap_interactors;
	})
	property(groups, InteractionGroupList, {
		if(pr(inner).wrap_groups==null)
			 pr(inner).wrap_groups = PR(InteractionGroupList).get(pr(inner).groups,true);
		pr(inner).wrap_groups;
	})

	public function new(?ignore=false) {
		pr(inner) = new PR(InteractionGroup)();
		pr(inner).outer = this;
		this.ignore = ignore;
	}

	public function toString() {
		var ret = "InteractionGroup#"+id;
		if(ignore) ret += ":ignore";
		return ret;
	}
}
