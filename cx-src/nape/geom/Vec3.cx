package nape.geom;
$(import);

class Vec3 {
	public var pr(inner):PR(Vec3);

	$(mixin genprop(x)
		property(x,Float,{
			if(pr(inner).validate!=null) pr(inner).validate();
			pr(inner).x;
		},{
			DEBUG(if(pr(inner).immutable) throw "Error: Vec3 is immutable";)
			pr(inner).x = x;
		})
	);
	genprop(x)
	genprop(y)
	genprop(z)
	
	public function new(?x:Float=0,?y:Float=0,?z:Float=0) {
		pr(inner) = new PR(Vec3)();
		pr(inner).outer = this;
		vec3_set(this.,$(->));
	}
	keep public inline function copy() return new Vec3(x,y,z)
	
	//------------------------
	
    property(length,Float,vec3_length_slow(this.),{
		DEBUG(
			if(isNaN(length)) throw "Error: Vec3::length cannot be NaN";
			if(vec3_lsq(this.)==0) throw "Error: Cannot set length of a zero vector";
		)
		vec3_muleq(this., length/this.length);
	})
	
	keep public inline function lsq() return vec3_lsq(this.)
	
	public inline function set(p:Vec3) {
		DEBUG(if(p==null) throw "Error: Cannot assign null Vec3";)
		return setxyz(p.x,p.y,p.z);
	}
	public inline function setxyz(x:Float,y:Float,z:Float) {
		vec3_set(this.,$(->));
		return this;
	}
	
	//-------------------------
	
	public inline function xy(?weak:Bool=false) return Vec2.get(x,y,weak)
	
	//-------------------------
	
	@:$keep public inline function toString() {
		return "{ x: "+x+" y: "+y+" z: "+z+" }";
	}
}
