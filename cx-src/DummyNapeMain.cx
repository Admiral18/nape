package;
$(import);

class DummyNapeMain implements IsoFunction {
    static function main() {
        new DummyNapeMain();
    }

    public static var debug:Debug;
    function new() {
        debug = new ShapeDebug(1,1);
        flash.Lib.current.addChild(debug.display);

        var txt = new flash.text.TextField();
        flash.Lib.current.addChild(txt);
        haxe.Log.trace = function (x:Dynamic, ?y) txt.text += Std.string(x)+"\n";

        var space = new Space(Vec2.get(0, 500));

        var floor:Body = new Body(BodyType.STATIC,Vec2.get(0,300));
        floor.shapes.add(new Polygon(Polygon.rect(0,0,800,100,true)));
        floor.space = space;

        var c = new InteractionGroup(true);
        for (i in 0...100) {
            var circle:Body = new Body(BodyType.DYNAMIC,Vec2.get(50,200));
//            circle.shapes.add(new Circle(20,null,Material.rubber()));
            circle.shapes.add(new Polygon(Polygon.box(40, 40), Material.rubber()));
            circle.rotation = 1;
            circle.space = space;
            circle.velocity.setxy(500,200+i); // THIS LINE
            circle.group = c;
        }

        (new haxe.Timer(6)).run = function () {
            debug.clear();
            space.step(1/120);
            debug.draw(space);
        };
    }

    public function iso(x:Float, y:Float) {
        x -= 150;
        y -= 150;
        return Math.sin((x*x+y*y - 150*150)*0.0005);
    }
}
