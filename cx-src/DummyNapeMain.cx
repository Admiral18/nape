package;
$(import);

class Iso {
    public var value:Float;
    public function new() {}        
}

interface IsoFunction {
    public function iso(x:Float, y:Float):Float;        
}

class DummyNapeMain implements IsoFunction {

    static function call1(iso:Float->Float->Float) {
        var sum = 0.0;
        for (i in 0...1000) {
        for (j in 0...1000) {
            sum += iso(i, j);                
        }
        }
    }
    static function call2(iso:IsoFunction) {
        var sum = 0.0;
        for (i in 0...1000) {
        for (j in 0...1000) {
            sum += iso.iso(i, j);                
        }
        }
    }

    public function iso(x:Float, y:Float):Float {
        return (Std.int(x)&0xff) - y;            
    }

    static function main() {
        var m = new DummyNapeMain();
        (new haxe.Timer(0)).run = m.goforit;
    }

    public function new() {}
    public function goforit() {
        call1(iso);            
        call2(this);
    }

}
