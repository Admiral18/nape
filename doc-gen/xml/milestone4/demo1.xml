<?xml version="1.0" encoding="utf-8" ?>
<data>

<swf name="Milestone 4 - Demo 01" package="">
	<long>
		<br/>
		<text>Simple demo, let things come to rest and they'll visually fall asleep, click to create a ball to drop from mouse coordinate to see how things wake up etc. whatever.</text>
		<br/>
		<br/>
		<swf centre="true" file="m401.swf" width="600" height="600"/>
		<br/>
		<br/>
		<link type="relative" anchor="AS3">AS3 Source</link><br/>
		<link type="relative" anchor="haXe">haXe Source</link><br/>
		<br/>
		<hr/>
		<br/>
		<anch name="AS3"/><text class="header2">AS3 Source</text>
		<br/>
		<code><![CDATA[package {
	import flash.Boot;
	import flash.display.Sprite;
	import flash.display.StageQuality;
	import flash.events.Event;
	import flash.events.MouseEvent;
	
	import nape.geom.Vec2;
	import nape.phys.Body
	import nape.phys.BodyType;
	import nape.phys.FluidProperties;
	import nape.shape.Shape;
	import nape.shape.Circle;
	import nape.shape.Polygon;
	import nape.space.Space;
	import nape.util.Debug;

	public class Main extends Sprite {
		public function Main():void {
			if (stage) init();
			else addEventListener(Event.ADDED_TO_STAGE, init);
		}
		
		private function init(e:Event = null):void {
			new Boot();
			removeEventListener(Event.ADDED_TO_STAGE, init);
			
			stage.quality = StageQuality.MEDIUM;

			var space:Space = new Space(new Vec2(0, 300));
			var debug:Debug = new Debug();
			
			var ground:Body = new Body(BodyType.STATIC);
			ground.shapes.add(new Polygon(Polygon.rect(0, 550, 600, 50)));
			ground.shapes.add(new Polygon(Polygon.rect(0, 0, 10, 600)));
			ground.shapes.add(new Polygon(Polygon.rect(600, 0, -10, 600)));
			ground.shapes.add(new Polygon(Polygon.rect(200, 400, 200, 20)));
			ground.shapes.add(new Polygon(Polygon.rect(290, 420, 20, 130)));
			ground.space = space;
			
			var water:Body = new Body(BodyType.STATIC);
			water.shapes.add(new Polygon(Polygon.rect(590, 500, -280, 50)));
			water.shapes.add(new Polygon(Polygon.rect(10, 500, 280, 50)));
			for (var i:int = 0; i < water.shapes.length; i++) {
				var shape:Shape = water.shapes.at(i);
				shape.fluidEnabled = true;
				shape.fluidProperties = new FluidProperties(4, 10);
			}
			water.space = space;
			
			for (var y:int = 0; y < 10; y++) {
				for (var x:int = 0; x <= 50; x++) {
					var box:Body = new Body(BodyType.DYNAMIC, new Vec2(50+x*10,50+y*20));
					if ((x+y)%2 == 0) shape = new Polygon(Polygon.regular(10, 20, 4));
					else shape = new Circle(5);
					shape.body = box;
					box.space = space;
				}
			}
			
			addEventListener(Event.ENTER_FRAME, function (ev:Event):void {
				space.step(1 / 60);
				graphics.clear();
				debug.draw(graphics, space);
			});
			
			stage.addEventListener(MouseEvent.MOUSE_DOWN, function(ev:Event):void {
				var ball:Body = new Body();
				ball.position.setxy(stage.mouseX, stage.mouseY);
				ball.space = space;
				ball.shapes.add(new Circle(5));
			});
			
			debug.draw(graphics, space);
		}
	}
}
]]></code>
		<br/>
		<hr/>
		<br/>
		<anch name="haXe"/><text class="header2">haXe Source</text>
		<br/>
		<code><![CDATA[package;

import nape.geom.Vec2;
import nape.phys.Body
import nape.phys.BodyType;
import nape.phys.FluidProperties;
import nape.shape.Shape;
import nape.shape.Circle;
import nape.shape.Polygon;
import nape.space.Space;
import nape.util.Debug;

class DummyNapeMain {
	static function main() {
		
		flash.Lib.current.stage.quality = flash.display.StageQuality.MEDIUM;
		var space = new Space(new Vec2(0, 300));
		var debug = new Debug();
		
		var ground = new Body(BodyType.STATIC);
		ground.shapes.add(new Polygon(Polygon.rect(0, 550, 600, 50)));
		ground.shapes.add(new Polygon(Polygon.rect(0, 0, 10, 600)));
		ground.shapes.add(new Polygon(Polygon.rect(600, 0, -10, 600)));
		ground.shapes.add(new Polygon(Polygon.rect(200, 400, 200, 20)));
		ground.shapes.add(new Polygon(Polygon.rect(290, 420, 20, 130)));
		ground.space = space;
		
		var water = new Body(BodyType.STATIC);
		water.shapes.add(new Polygon(Polygon.rect(590, 500, -280, 50)));
		water.shapes.add(new Polygon(Polygon.rect(10, 500, 280, 50)));
		for(shape in water.shapes) {
			shape.fluidEnabled = true;
			shape.fluidProperties = new FluidProperties(4, 10);
		}
		water.space = space;
		
		for(y in 0...10) {
			for(x in 0...51) {
				var box = new Body(BodyType.DYNAMIC, new Vec2(50+x*10,50+y*20));
				var shape:Shape;
				if ((x+y)%2 == 0) shape = new Polygon(Polygon.regular(10, 20, 4))
				else shape = new Circle(5);
				shape.body = box;
				box.space = space;
			}
		}
		
		flash.Lib.current.addEventListener(flash.events.Event.ENTER_FRAME, function (_) {
			space.step(1 / 60);
			flash.Lib.current.graphics.clear();
			debug.draw(flash.Lib.current.graphics, space);
		});
		
		flash.Lib.current.stage.addEventListener(flash.events.MouseEvent.MOUSE_DOWN, function(_) {
			var ball = new Body();
			ball.position.setxy(flash.Lib.current.stage.mouseX, flash.Lib.current.stage.mouseY);
			ball.space = space;
			ball.shapes.add(new Circle(5));
		});
	}
}]]></code>
	</long>
</swf>
	
</data>