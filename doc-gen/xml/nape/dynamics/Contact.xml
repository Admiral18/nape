<?xml version="1.0" encoding="utf-8" ?>
<data>

<class package="nape.dynamics" name="ContactList" super="List[Contact]">
	<file>Contact.hx</file>
	<description>Instance of List&lt;T&gt; for Contact types</description>
	<short>List of Contacts</short>
	
	<constructor>
		<description>Construct new ContactList</description>
		<detail><description>Construct new ContactList</description></detail>
	</constructor>
</class>

<class package="nape.dynamics" name="ContactIterator" super="ListIterator[Contact]">
	<file>Contact.hx</file>
	<description>Instance of ListIterator&lt;T&gt; for Contact types</description>
	<short>Iterator to list of Contacts</short>
</class>

<!-- ------------------------------------------------------------------------------------------- -->
	
<class package="nape.dynamics" name="Contact">
	<file>Contact.hx</file>
	<short>Contact between two shapes</short>
	<description><text>Contact between two shapes storing contact information</text></description>
	
	<property name="penetration" type="Float" readonly="true">
		<description>How much shapes are overlapping*</description>
		<detail>
			<description>How much shapes are overlapping*</description>
			<get>Contact no longer in use - hint: dangerous to store your own references to contacts</get>
		</detail>
	</property>
	
	<property name="position" type="Vec2" readonly="true">
		<description>Immutable Vec2 of contact position*</description>
		<detail>
			<description>Immutable Vec2 corresponding to the global position of the contact</description>
			<get>Contact no longer in use - hint: dangerous to store your own references to contacts</get>
		</detail>
	</property>
	
	<property/>
	<property name="fresh" type="Bool" readonly="true">
		<description>Contact is new this step</description>
		<detail>
			<description>A contact is fresh if it has only existed as a result of the previous/current call to space.step, synonomous with being a 'new' contact.</description>
			<get>Contact no longer in use - hint: dangerous to store your own references to contacts</get>
		</detail>
	</property>
	
	<method name="normalImpulse" const="true" return="Vec3">
		<arg name="body" type="Body" const="true" optional="true" default="null"/>
		<description> Normal contact impulse </description>
		<detail>
			<description><text>When body is null, returns the normal impulse which was applied to each body at the contact position, when body is non-null returns the impulse applied to the specific body.</text><br/><br/><text>If body is null then </text><code inline="true">return.z</code><text> will always be 0</text></description>
			<throws>body is non-null and not related to contact</throws>
			<throws>contact no longer in use</throws>
		</detail>
	</method>
	
	<method name="tangentImpulse" const="true" return="Vec3">
		<arg name="body" type="Body" const="true" optional="true" default="null"/>
		<description> Tangent contact impulse </description>
		<detail>
			<description><text>When body is null, returns the tangent impulse which was applied to each body at the contact position, when body is non-null returns the impulse applied to the specific body.</text><br/><br/><text>If body is null then </text><code inline="true">return.z</code><text> will always be 0</text></description>
			<throws>body is non-null and not related to contact</throws>
			<throws>contact no longer in use</throws>
		</detail>
	</method>
	
	<method name="rollingImpulse" const="true" return="Float">
		<arg name="body" type="Body" const="true" optional="true" default="null"/>
		<description> Rolling contact impulse </description>
		<detail>
			<description>When body is null, returns the rolling impulse which was applied to each body, when body is non-null returns the impulse applied to the specific body.</description>
			<throws>body is non-null and not related to contact</throws>
			<throws>contact no longer in use</throws>
		</detail>
	</method>
	
	<method name="totalImpulse" const="true" return="Vec3">
		<arg name="body" type="Body" const="true" optional="true" default="null"/>
		<description> Total contact impulse </description>
		<detail>
			<description>When body is null, returns the total impulse which was applied to each body at the contact position, when body is non-null returns the impulse applied to the specific body.</description>
			<throws>body is non-null and not related to contact</throws>
			<throws>contact no longer in use</throws>
		</detail>
	</method>
</class>
	
</data>