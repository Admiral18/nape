<?xml version="1.0" encoding="utf-8" ?>
<data>

<class package="nape.phys" name="InteractorList" super="List[Interactor]">
	<file>Interactor.hx</file>
	<description>Instance of List&lt;T&gt; for Interactor types</description>
	<short>List of Interactors</short>
	
	<constructor>
		<description>Construct new InteractorList</description>
		<detail><description>Construct new InteractorList</description></detail>
	</constructor>
</class>

<class package="nape.phys" name="InteractorIterator" super="ListIterator[Interactor]">
	<file>Interactor.hx</file>
	<description>Instance of ListIterator&lt;T&gt; for Interactor types</description>
	<short>Iterator to list of Interactors</short>
</class>

<class package="nape.phys" name="Interactor">
	<file>Interactor.hx</file>
	<short>Base class for Interacting physics types</short>
	<description>Interactor forms the base class of Compound, Body and Shape as the three types of objects which act as interacting objects when it comes to such things as Callbacks and InteractionGroup's</description>

	<property name="id" type="Int" readonly="true">
		<description>Unique identifier for Interactors</description>
		<detail>
			<description>Unique per-Interactor identifier (Thus the same set of id's is shared between all Shapes, Bodies and Compounds)</description>
		</detail>
	</property>

	<property/>

	<property name="cbTypes" type="CbTypeList" value="[CbType.ANY_#]">
		<description>Interactor callback types</description>
		<detail>
			<description>Interactor callback types for callback events. If a Body, given the CbType.ANY_BODY type by default, for sShape the .... etc</description>
		</detail>
	</property>
	<property name="group" type="InteractionGroup">
		<description>Assigned InteractionGroup</description>
		<detail>
			<description>InteractionGroup assigned to this Interactor</description>
		</detail>
	</property>
	<property name="userData" type="Dynamic">
		<description>user defined data </description>
		<detail>
			<description>user defined data</description>
		</detail>
	</property>

	<property/>
	<property name="castShape" type="Shape" readonly="true">
		<description>Fast down-casting self-reference</description>
		<detail>
			<description>If this Interactor is actually a Shape, then this is a typed self-reference to avoid run-time casting</description>
		</detail>
	</property>
	<property name="castBody" type="Body" readonly="true">
		<description>Fast down-cast self-reference</description>
		<detail>
			<description>If this Interactor is actually a Body, then this is a typed self-reference to avoid run-time casting</description>
		</detail>
	</property>
	<property name="castCompound" type="Compound" readonly="true">
		<description>Fast down-cast self-reference</description>
		<detail>
			<description>If this Interactor is actually a Compound, then this is a typed self-reference to avoid run-time casting</description>
		</detail>
	</property>

	<method name="isShape" return="Bool" const="true">
		<description>Check if Interactor is a Shape</description>
		<detail>
			<description>Returns true if this Interactor is a Shape avoiding the need for run-time type checks</description>
		</detail>
	</method>
	<method name="isBody" return="Bool" const="true">
		<description>Check if Interactor is a Body</description>
		<detail>
			<description>Returns true if this Interactor is a Body avoiding the need for run-time type checks</description>
		</detail>
	</method>
	<method name="isCompound" return="Bool" const="true">
		<description>Check if Interactor is a Compound</description>
		<detail>
			<description>Returns true if this Interactor is a Compound avoiding the need for run-time type checks</description>
		</detail>
	</method>
</class>

</data>
