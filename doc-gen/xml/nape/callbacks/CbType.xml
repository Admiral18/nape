<?xml version="1.0" encoding="utf-8" ?>
<data>

<class package="nape.callbacks" name="CbTypeList" super="List[CbType]">
	<file>CbType.hx</file>
	<description>Instance of List&lt;T&gt; for CbType types</description>
	<short>List of CbTypes</short>
	
	<constructor>
		<description>Construct new CbTypeList</description>
		<detail><description>Construct new CbTypeList</description></detail>
	</constructor>
</class>

<class package="nape.callbacks" name="CbTypeIterator" super="ListIterator[CbType]">
	<file>CbType.hx</file>
	<description>Instance of ListIterator&lt;T&gt; for CbType types</description>
	<short>Iterator to list of CbTypes</short>
</class>

<!-- ------------------------------------------------------------------------------------------- -->


<class package="nape.callbacks" name="CbType">
	<file>CbType.hx</file>
	<short>Callback type identifier</short>
	<description>Callback type identifier for Constraint/Shape/Body's over which callback listeners are applied</description>

	<property static="true" name="ANY_BODY" type="CbType" readonly="true">
		<description>Default Body CbType</description>
		<detail>
			<description>CbType distributed to all Body's on construction</description>
		</detail>
	</property>
	<property static="true" name="ANY_SHAPE" type="CbType" readonly="true">
		<description>Default Shape CbType</description>
		<detail>
			<description>CbType distributed to all Shape's on construction</description>
		</detail>
	</property>
	<property static="true" name="ANY_COMPOUND" type="CbType" readonly="true">
		<description>Default Compound CbType</description>
		<detail>
			<description>CbType distributed to all Compound's on construction</description>
		</detail>
	</property>
	<property static="true" name="ANY_CONSTRAINT" type="CbType" readonly="true">
		<description>Default Constraint CbType</description>
		<detail>
			<description>CbType distributed to all Constraint's on construction</description>
		</detail>
	</property>

	<property name="id" type="Int" readonly="true">
		<description>unique CbType id</description>
		<detail>
			<description>Unique integer id for each CbType instantiated</description>
		</detail>
	</property>

	<property name="userData" type="Dynamic">
		<description>user defined data</description>
		<detail>
			<description>user defined data</description>
		</detail>
	</property>

	<property/>

	<property name="interactors" type="InteractorList" readonly="true">	
		<description>Active interactors using CbType</description>
		<detail>
			<description>List of all active interactors using this CbType. Active interactors referring to those currently in a Space</description>
		</detail>
	</property>
	<property name="constraints" type="ConstraintList" readonly="true">	
		<description>Active constraints using CbType</description>
		<detail>
			<description>List of all active constraints using this CbType. Active constraints referring to those currently in a Space with active=true</description>
		</detail>
	</property>

	<property/>
	<property name="listeners" type="ListenerList" readonly="true">
		<description>Active listeners using CbType</description>
		<detail>
			<description>List of all active listeners using this CbType. Active listeners referring to those currently in a Space</description>
		</detail>
	</property>

	<constructor>
		<description> Construct a new CbType </description>
		<detail>
			<description> Construct a new CbType </description>
		</detail>
	</constructor>

	<method name="include" return="OptionType">
		<arg name="includes" const="true"/>
		<description> Create OptionType with appended include types </description>
		<detail>
			<description>
				<text>Create a new OptionType with 'this' as an included type, appending to the included types. </text><br/>
				<br/>
				<text>The Type of the argument should be 'either' CbType, CbTypeList, Array&lt;CbType&gt; or for flash9+ targets, flash.Vector&lt;CbType&gt;</text>
			</description>
		</detail>
	</method>
	<method name="exclude" return="OptionType">
		<arg name="excludes" const="true"/>
		<description> Create OptionType with appended exclude types </description>
		<detail>
			<description>
				<text>Create a new OptionType with 'this' as an included type, appending to the excluded types. </text><br/>
				<br/>
				<text>The Type of the argument should be 'either' CbType, CbTypeList, Array&lt;CbType&gt; or for flash9+ targets, flash.Vector&lt;CbType&gt;</text>
			</description>
		</detail>
	</method>

</class>

</data>

