<?xml version="1.0" encoding="utf-8" ?>
<data>

<class package="nape.callbacks" name="CbEvent">
	<file>Callback.hx</file>
	<short>Callback types</short>
	<description>
		<text>Callback type flags</text>
	</description>

	<property static="true" name="BEGIN" type="CbEvent" readonly="true">
		<description> Handle interacting start event </description>
		<detail>
			<description>Callback event corresponding to when two interactors begin interacting (As defined by their shapes overlapping)</description>
		</detail>
	</property>
	<property static="true" name="ONGOING" type="CbEvent" readonly="true">
		<description> Handle ongoing interaction event </description>
		<detail>
			<description>Callback event corresponding to when two interactors are in the process of interacting. (Overlaps with BEGIN event) (As defined by their shapes overlapping)</description>
		</detail>
	</property>
	<property static="true" name="END" type="CbEvent" readonly="true">
		<description> Handle interacting end event </description>
		<detail>
			<description>Callback event corresponding to when two interactors stop interacting (As defined by their shapes overlapping)</description>
		</detail>
	</property>

	<property/>
	<property static="true" name="PRE" type="CbEvent" readonly="true">
		<description> Pre-interaction event </description>
		<detail>
			<description>Callback event occurring during a space.step() for fine control over interactions </description>
		</detail>
	</property>

	<property/>

	<property static="true" name="WAKE" type="CbEvent" readonly="true">
		<description> Body/Constraint wake event </description>
		<detail>
			<description> Callback event corresponding to a body or constraint being woken </description>
		</detail>
	</property>
	<property static="true" name="SLEEP" type="CbEvent" readonly="true">
		<description> Body/Constraint sleep event </description>
		<detail>
			<description> Callback event corresponding to a body or constraint being put to sleep </description>
		</detail>
	</property>

	<property/>

	<property static="true" name="BREAK" type="CbEvent" readonly="true">
		<description> Constraint break event </description>
		<detail>
			<description> Callback event corresponding to a constraint being broken </description>
		</detail>
	</property>
</class>

<class package="nape.callbacks" name="Callback">
	<file>Callback.hx</file>
	<short>Base type for Callback objects</short>
	<description>
		<text>Base type for all non-PRE Callback handlers.</text>
		<br/><br/>
		<text>Callback objects are automatically recycled, so you should not hold any references to them escaping the event handler.</text>
	</description>

	<property name="event" type="CbEvent" readonly="true">
		<description> Event type </description>
		<detail>
			<description> Type of event this callback relates to </description>
		</detail>
	</property>
	<property name="listener" type="Listener" readonly="true">
		<description> Related listener </description>
		<detail>
			<description> The related listener object generating this callback </description>
		</detail>
	</property>
</class>

<class package="nape.callbacks" name="BodyCallback" super="Callback">
	<file>Callback.hx</file>
	<short>Callback object for Body Listener callbacks</short>
	<description>
		<text>Callback object for Body listener callback handlers</text>
	</description>

	<property name="body" type="Body" readonly="true">
		<description> Body for event </description>
		<detail>
			<description> Body relating to event</description>
		</detail>
	</property>
</class>

<class package="nape.callbacks" name="ConstraintCallback" super="Callback">
	<file>Callback.hx</file>
	<short>Callback object for Constraint Listener callbacks</short>
	<description>
		<text>Callback object for Constraint Listener callback handlers</text>
	</description>

	<property name="constraint" type="Constraint" readonly="true">
		<description> Constraint for event </description>
		<detail>
			<description> Constraint relating to event</description>
		</detail>
	</property>
</class>

<class package="nape.callbacks" name="PreCallback" super="Callback">
	<file>Callback.hx</file>
	<short>Callback object for Pre Listener callbacks</short>
	<description>
		<text>Callback object for Pre Listener callback handlers</text>
	</description>

	<property name="int1" type="Interactor" readonly="true">
		<description> First interactor for event </description>
		<detail>
			<description> First interactor relating to event, matching the first CbType in the listener.</description>
		</detail>
	</property>
	<property name="int2" type="Interactor" readonly="true">
		<description> Second interactor for event </description>
		<detail>
			<description> Second interactor relating to event, matching the second CbType in the listener. </description>
		</detail>
	</property>
	<property name="arbiter" type="Arbiter" readonly="true">
		<description> Arbiter for Pre handler</description>
		<detail>
			<description> The arbiter on which the handler must decide what to do with the interactors </description>
		</detail>
	</property>
	<property name="swapped" type="Bool" readonly="true">
		<description> Arbiter order is swapped </description>
		<detail>
			<description> If true, then the arbiter's shape1, body1 properties are related to the int2 Interactor, and not the int1 Interactor, and equally the normal of the arbiter will point from int2 towards int1 rather than int1 to int2 (Noting that the normal always points from arbiter's shape1/body1 to it's shape2/body2) </description>
		</detail>
	</property>
</class>

<class package="nape.callbacks" name="InteractionCallback" super="Callback">
	<file>Callback.hx</file>
	<short>Callback object for Interaction Listener callbacks</short>
	<description>
		<text>Callback object for Interaction Listener callback handlers</text>
	</description>

	<property name="int1" type="Interactor" readonly="true">
		<description> First interactor for event </description>
		<detail>
			<description> First interactor relating to event, matching the first CbType in the listener.</description>
		</detail>
	</property>
	<property name="int2" type="Interactor" readonly="true">
		<description> Second interactor for event </description>
		<detail>
			<description> Second interactor relating to event, matching the second CbType in the listener. </description>
		</detail>
	</property>
	<property name="arbiters" type="ArbiterList" readonly="true">
		<description> Arbiters between interactors</description>
		<detail>
			<description> List of all arbiters between the two interactors. </description>
		</detail>
	</property>
</class>

</data>
