<?xml version="1.0" encoding="utf-8" ?>
<data>

<class package="nape.callbacks" name="OptionType">
	<file>OptionType.hx</file>
	<short>CbType options for Listeners</short>
	<description>
		<text>Pair of lists of CbTypes used by Listeners for matching against Interactor/Constraint cbTypes lists</text><br/>
		<br/>
		<text>A given list of CbType's will succesfully match the OptionType if it has a non-empty intersection with the includes list, and an empty intersection with the excludes list</text><br/>
		<br/>
		<text>Eg: If the OptionType was constructed like </text><code inline="true">CbType.ANY_BODY.except(PLATFORM) </code><text>, then an object will match this optiontype if it is a Body, and does 'not' have the PLATFORM CbType</text>
	</description>

	<property name="includes" type="CbTypeList" readonly="true">
		<description>Mutable list of included types</description>
		<detail>
			<description>Mutable list of included types for the OptionType. An object's CbType's list cannot match the OptionType unless the object's CbType list and the includes list share a common element</description>
		</detail>
	</property>	
	<property name="excludes" type="CbTypeList" readonly="true">
		<description>Mutable list of excluded types</description>	
		<detail>
			<description>Mutable list of excluded types for the OptionType. Should an object's CbType's list and the excludes list share a common element, then the object's CbType list cannot match the OptionType</description>
		</detail>
	</property>

	<constructor>
		<arg name="includes" type="Dynamic" const="true" default="null" optional="true"/>
		<arg name="excludes" type="Dynamic" const="true" default="null" optional="true"/>
		<detail>
			<description>
				<text>Construct new OptionType from given includes and excludes.</text><br/>
				<br/>
				<text>The Type of the arguments must be 'either' CbType, CbTypeList, Array&lt;CbType&gt; or for flash9+ targets, flash.Vector&lt;CbType&gt;</text>
			</description>
		</detail>
	</constructor>

	<method name="including" return="OptionType">
		<arg name="includes" const="true"/>
		<description> Append to included types </description>
		<detail>
			<description>
				<text>Append to included types of 'this' OptionType, returning the 'this' object for chained operations.</text><br/>
				<br/>
				<text>The Type of the argument should be 'either' CbType, CbTypeList, Array&lt;CbType&gt; or for flash9+ targets, flash.Vector&lt;CbType&gt;</text>
			</description>
		</detail>
	</method>
	<method name="excluding" return="OptionType">
		<arg name="excludes" const="true"/>
		<description> Append to excluded types </description>
		<detail>
			<description>
				<text>Append to excluded types of 'this' OptionType, returning the 'this' object for chained operations.</text><br/>
				<br/>
				<text>The Type of the argument should be 'either' CbType, CbTypeList, Array&lt;CbType&gt; or for flash9+ targets, flash.Vector&lt;CbType&gt;</text>
			</description>
		</detail>
	</method>
</class>

</data>
