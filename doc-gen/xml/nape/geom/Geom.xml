<?xml version="1.0" encoding="utf-8" ?>
<data>
	
<class package="nape.geom" name="Geom">
	<file>Geom.hx</file>
	<description>
		<text>Geometric utilities.</text>
	</description>
	<short>
		Geometric utilities.
	</short>
	
	<method name="distance" static="true" return="Float">
		<description>Calculate distance and closest points between shapes</description>
		<arg name="shape1" type="Shape" const="true"/>
		<arg name="shape2" type="Shape" const="true"/>
		<arg name="out1" type="Vec2"/>
		<arg name="out2" type="Vec2"/>
		<detail>
			<description><text>Calculate the distance between two shapes, storing the closest points on the two shapes in the respective out Vec2. If the shapes are intersecting (such that distance has no meaning) then the out Vec2's will not be modified, and a value of -1.0 will be returned</text><br/><br/><text>Compared to most nape methods, as the Vec2's are specifically for returning data, weak Vec2's will not be disposed of.</text></description>
		</detail>
	</method>

	<method name="intersects" static="true" return="Bool">
		<description>Calculate whether two shapes intersect</description>
		<arg name="shape1" type="Shape" const="true"/>
		<arg name="shape2" type="Shape" const="true"/>
		<detail>
			<description>
				<text>Calculate whether the two shapes intersect. This should be more efficient than evaluating this using the distance method</text>
			</description>
		</detail>	
	</method>

	<method name="contains" static="true" return="Bool">
		<description>Calculate whether one shape is contained within another</description>
		<arg name="shape1" type="Shape" const="true"/>
		<arg name="shape2" type="Shape" const="true"/>
		<detail>
			<description>
				<text>Calculate whether shape2 is completely contained within shape1. </text>
			</description>
		</detail>
	</method>
</class>
	
</data>
