package;
$(import);

class XType {
	public var name:String; /**/ public var _name:String;
	public var generic:Array<XType>; public var allnull:Bool;
	public var mixgen:Bool;
	
	public var ref:XClass;
	
	public function new() {
		name = "";
		generic = new Array<XType>();
	}

	public function linkName() {
		if (ref == null) {
			var ret = name;
			for (g in generic) ret += "_" + g.linkName();
			return ret;
		}else return ref.linkName();
	}
	
	public function debugName() {
		var ret = "";
		if (ref == null) {
			ret += "$" + name;
			if (generic.length > 0) {
				ret += if (mixgen) "(" else "<";
				var fst = true;  for (g in generic) { if (!fst) ret += ",";  ret += g.debugName(); fst = false; }
				ret += if (mixgen) ")" else ">";
			}
		}else {
			ret += name;
			if (generic.length > 0) {
				var generic2 = ref.generic;
				ret += if (mixgen) "(" else "<";
				var gi = generic2.iterator();
				var fst = true;  for (g in generic) { if (!fst) ret += ",";  ret += gi.next().debugName() + "/" + g.debugName(); fst = false; }
				ret += if (mixgen) ")" else ">";
			}
		}
		return ret;
	}
	
	public function getName() {
		var ret = "";	
		ret += name;
		if (generic.length > 0) {
			ret += if (mixgen) "(" else "&lt;";
			var fst = true;  for (g in generic) { if (!fst) ret += ",";  ret += g.getName(); fst = false; }
			ret += if (mixgen) ")" else "&gt;";
		}
		return ret;
	}
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

typedef XConstructor = XMethod;

class XArg {
	public var const:Bool;
	public var name:String;
	public var type:XType; /**/ public var _type:String;
	public var optional:Bool;
	public var default_value:String;
	
	public function new() {
		const = false;
		name = default_value = _type = "";
	}
}

class XMethod {
	public var const:Bool;
	public var args:Array<XArg>;
	public var short:XDescription;
	public var name:String;
	public var return_type:XType; /**/ public var _return:String;
	public var is_inline:Bool;
	public var is_abstract:Bool;
	public var is_static:Bool;
	
	public var detail:XMethDetail;
	
	public var mixin_type:String;
	public var mixin_id:String;
	
	public var parent:XClass;
	
	public function new() {
		const = false;
		args = new Array<XArg>();
		name = mixin_type = mixin_id = ""; /**/ _return = "";
	}
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XProperty {
	public var name:String;
	public var type:XType; /**/ public var _type:String;
	public var is_static:Bool;
	public var static_value:String;
	public var is_inline:Bool;
	public var short:XDescription;
	public var readonly:Bool;
	
	public var detail:XPropDetail;
	
	public var parent:XClass;
	
	public function new() { name = static_value = ""; /**/ _type = "";  }
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XDescription {
	public var desc:Array<XDesc>;
	
	public function new() {
		desc = new Array<XDesc>();
	}
}

class XTHROW extends XDesc {
	public function new() { type = "throw"; }
}

class XDesc {
	public var type:String;
}
class XBullet extends XDesc {
	public function new() { type = "bull"; }
}
class XTab extends XDesc {
	public function new() { type = "tab"; }
}
class XText extends XDesc {
	public var html:String;
	public var size:String;
	public function new() { type = "text"; html = ""; size = "";  }
}
class XHr extends XDesc {
	public function new() { type = "hr"; }
}
class XHTML extends XDesc {
	public var html:String;
	public var infile:String;
	public function new(html:String,?infile:String=null) { this.html = html; type = "html"; this.infile = infile; }
}
class XAnch extends XDesc {
	public var name:String;
	public function new() { type = "anch"; }
}

class XSwf extends XDesc {
	public var swf:String;
	public var height:String;
	public var width:String;
	public var centre:Bool;
	
	public function new() { type = "swf"; swf = height = width = "";  }
}

class XImg extends XDesc {
	public var img:String;
	public var height:String;
	public var inlin:Bool;
	public var width:String;
	public var cls:String;
	
	public function new() { type = "img"; img = height = width = cls = ""; }
}

class XLink extends XDesc {
	public var targ:String; //class package
	public var anchor:String; //optional anchor within above
	public var href:String;
	public var name:XDescription;
	
	public var cls:XClass;
	public var pckg:XPackage;
	public var exam:XExample;
	
	public function new() { type = "link"; targ = anchor = href = ""; }
}

class XIndent extends XDesc {
	public var html:XDescription;
	
	public function new() { type = "indent"; }
}

class XCode extends XDesc {
	public var incode:String; //inline code
	public var fref:String; //file reference
	public var inlin:Bool;
	
	public function new() { type = "code"; incode = fref = "";  }
}

class XBr extends XDesc {
	public function new() { type = "br"; }
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XPackage {
	public var name:String;
	public var parent:XPackage; /**/ public var _parent:String;
	
	public var fullname:String;
	public var pdepth:Int;
	
	public var short:XDescription;
	public var long:XDescription;
	
	public var packages:Array<XPackage>;
	public var classes:Array<XClass>;
	
	public var tutorials:Array<XExample>;
	public var demoes:Array <XExample>;
	
	public function new() {
		name = ""; /**/ _parent = "";
		fullname = "";
		pdepth = 0;
		packages = new Array<XPackage>();
		classes = new Array<XClass>();
		tutorials = new Array<XExample>();
		demoes = new Array<XExample>();
	}
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XClass extends XType {
	public var pckg:XPackage; /**/ public var _pckg:String;
	public var supertype:XType; /**/ public var _supertype:String;
	
	public var subclasses:Array<XClass>;
	public var pdepth:Int;
	
	public var xfile:XDescription;
	public var imples:Array<XType>; /**/ public var _imples:Array<String>;
	public var usings:Array<XType>; /**/ public var _usings:Array<String>;
	
	public var short:XDescription;
	public var long:XDescription;
	
	public var constructor:XConstructor;
	
	public var properties:Array<XProperty>;
	public var constants:Array<XProperty>;
	public var methods:Array<XMethod>;
	public var abstracts:Array<XMethod>;
	public var statics:Array<XMethod>;
	
	public var i_properties:Array<XProperty>;
	public var i_constants:Array<XProperty>;
	public var i_methods:Array<XMethod>;
	public var i_abstracts:Array<XMethod>;
	public var i_statics:Array<XMethod>;
	public var i_done:Bool;
	
	public var seealso:Array<XDescription>;
	public var examples:Array<XExample>;
	
	public function new() {
		super();
		
		pdepth = 0;
		_pckg = _supertype = "";
		
		subclasses = new Array<XClass>();
		
		imples = new Array<XType>(); /**/ _imples = new Array<String>();
		usings = new Array<XType>(); /**/ _usings = new Array<String>();
		
		properties = new Array<XProperty>();
		constants = new Array<XProperty>();
		constants = new Array<XProperty>();
		methods = new Array<XMethod>();
		abstracts = new Array<XMethod>();
		statics = new Array<XMethod>();
		
		i_properties = new Array<XProperty>();
		i_constants = new Array<XProperty>();
		i_constants = new Array<XProperty>();
		i_methods = new Array<XMethod>();
		i_abstracts = new Array<XMethod>();
		i_statics = new Array<XMethod>();
		i_done = false;
		
		seealso = new Array<XDescription>();
		examples = new Array<XExample>();
	}
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XExample {
	public var name:String;
	public var desc:XDescription;
	public var short:XDescription;
	
	public var _pckg:String; public var pckg:XPackage;
	
	public function new() {
		_pckg = "";
		name = "";
	}
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XDetail {
	public var long:XDescription;
	public var seealso:Array<XDescription>;
	public var examples:Array<XExample>; public var _examples:Array<String>;
	
	public var sets:Array<XDescription>; //used by properties
	public var gets:Array<XDescription>;
	
	public function new() {
		seealso = new Array<XDescription>();
		examples = new Array<XExample>(); /**/ _examples = new Array<String>();
		
		sets = new Array<XDescription>();
		gets = new Array<XDescription>();
	}
}
typedef XPropDetail = XDetail;

class XMethDetail extends XDetail {
	public var return_desc:XDescription;
	public var params:Array<XDescription>;
	
	public var throws:Array<XDescription>;
	
	public function new() {
		super();
		params = new Array<XDescription>();
		throws = new Array<XDescription>();
	}
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - 

class XLib {
	public var packages:Array<XPackage>;
	public var examples:Array<XExample>;
	public var tutorials:Array<XExample>;
	public var swfs:Array<XExample>;
	public var docs:Array<XExample>;
	
	public var index:XDescription;
	public var contrib:XDescription;
	public var e404:XDescription;
	
	public var all_packages:Array<XPackage>;
	public var all_classes:Array<XClass>;
	
	public function new() {
		packages = new Array<XPackage>();
		examples = new Array<XExample>();
		tutorials = new Array<XExample>();
		docs = new Array<XExample>();
		swfs = new Array<XExample>();
		
		all_packages = new Array<XPackage>();
		all_classes = new Array<XClass>();
	}
}
